Problem link: https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description/?envType=study-plan-v2&envId=leetcode-75
Approch: 
1. Iterate through the string with pointer j.
2. If the character at j is a vowel, increment countVowel.
3. If the window size (j - i + 1) equals k:
4. Update res with the maximum of res and countVowel.
5. If the character at i is a vowel, decrement countVowel (since it's being removed from the window).
6. Move the start of the window forward by incrementing i.
7. Always increment j to expand the window.
Sol:
var maxVowels = function(s, k) {
    let n = s.length;
    let i = 0;
    let j = 0;
    let countVowel = 0;
    let res = -Infinity;

    while(j < n){
        if(s[j] === 'a' ||s[j] === 'e' || s[j] === 'i' || s[j] === 'o' || s[j] === 'u' ) {
            countVowel++;
        }

        if((j - i + 1) === k){
            res = Math.max(res, countVowel);
             if(s[i] === 'a' ||s[i] === 'e' || s[i] === 'i' || s[i] === 'o' || s[i] === 'u' ){
                countVowel--;
             }
            
            i++;
        }
        j++;
    }
    return res;
};

Time Complexity: O(n)
Space Complexity: O(1)
